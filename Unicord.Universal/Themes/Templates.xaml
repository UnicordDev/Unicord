<ResourceDictionary
    x:Class="Unicord.Universal.Resources.Templates"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Unicord.Universal.Resources"
    xmlns:wam="using:Unicord.Universal.Controls"
    xmlns:models="using:Unicord.Universal.Models"
    xmlns:entities="using:DSharpPlus.Entities"
    xmlns:lib="using:Microsoft.UI.Xaml.Controls"
    xmlns:media="using:Microsoft.UI.Xaml.Media"
    xmlns:flyouts="using:Unicord.Universal.Controls.Flyouts"
    xmlns:controls="using:Unicord.Universal.Controls"
    xmlns:presence="using:Unicord.Universal.Controls.Presence"
    xmlns:users="using:Unicord.Universal.Controls.Users"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core" 
    xmlns:media1="using:Microsoft.Xaml.Interactions.Media" 
    xmlns:channels="using:Unicord.Universal.Controls.Channels"
    xmlns:channelVMs="using:Unicord.Universal.Models.Channels"
    xmlns:guildVMs="using:Unicord.Universal.Models.Guild" 
    xmlns:userVMs="using:Unicord.Universal.Models.User"
    x:DefaultBindMode="OneWay">

    <ResourceDictionary.MergedDictionaries>
        <Presences xmlns="using:Unicord.Universal.Resources.Controls"/>
        <Messages xmlns="using:Unicord.Universal.Resources.Controls"/>
        <ResourceDictionary Source="Controls/Emoji.xaml"/>
        <ResourceDictionary Source="Controls/Users.xaml"/>
        <ResourceDictionary Source="Controls/Permissions.xaml"/>
        <ResourceDictionary Source="Controls/UniversalWebView.xaml"/>
        <ResourceDictionary Source="Controls/Flyouts.xaml"/>
        <Channels xmlns="using:Unicord.Universal.Resources.Controls"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ChannelNameTextBoxStyle" TargetType="TextBox">
        <Setter Property="Foreground" Value="{ThemeResource TextControlForeground}"/>
        <Setter Property="Background" Value="{ThemeResource TextControlBackground}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource TextControlBorderBrush}"/>
        <Setter Property="SelectionHighlightColor" Value="{ThemeResource TextControlSelectionHighlightColor}"/>
        <Setter Property="BorderThickness" Value="2,2,2,2"/>
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Name="DeleteButtonStyle" TargetType="Button">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid x:Name="ButtonLayoutGrid" Background="{ThemeResource TextControlButtonBackground}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{ThemeResource TextControlButtonBorderBrush}">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="PointerOver">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPointerOver}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPressed}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPressed}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPressed}"/>
                                                                </ObjectAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Opacity" To="0"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <TextBlock x:Name="GlyphElement" AutomationProperties.AccessibilityView="Raw" FontStyle="Normal" FontFamily="{StaticResource SymbolThemeFontFamily}" Foreground="{ThemeResource TextControlButtonForeground}" FontSize="12" HorizontalAlignment="Center" Text="&#xE10A;" VerticalAlignment="Center"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlHeaderForegroundDisabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundDisabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ElementElement" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TransparentBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushDisabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundDisabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ElementText" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundDisabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushPointerOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ElementElement" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushPointerOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundPointerOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundPointerOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundFocused}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ElementElement" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushFocused}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushFocused}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundFocused}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="RequestedTheme">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Light"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonStates">
                                <VisualState x:Name="ButtonVisible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteButton" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ButtonCollapsed"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="HeaderContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.ColumnSpan="3" Grid.Column="0" FontWeight="Normal" Foreground="{ThemeResource TextControlHeaderForeground}" Margin="{StaticResource TextBoxTopHeaderMargin}" Grid.Row="0" TextWrapping="Wrap" VerticalAlignment="Top" Visibility="Collapsed" x:DeferLoadStrategy="Lazy"/>
                        <Border x:Name="BorderElement" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="3" Grid.Column="0" Control.IsTemplateFocusTarget="True" MinHeight="{ThemeResource TextControlThemeMinHeight}" MinWidth="{ThemeResource TextControlThemeMinWidth}" Grid.RowSpan="1" Grid.Row="1"/>
                        <Grid x:Name="ElementElement" Grid.Row="1" Margin="2,2,-2,2" Padding="{TemplateBinding Padding}" Background="{TemplateBinding BorderBrush}">
                            <TextBlock x:Name="ElementText" Text="#" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}"  />
                        </Grid>
                        <ScrollViewer x:Name="ContentElement" AutomationProperties.AccessibilityView="Raw" Grid.Column="1" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsTabStop="False" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" ZoomMode="Disabled"/>
                        <TextBlock x:Name="PlaceholderTextContentPresenter" Grid.ColumnSpan="2" Grid.Column="1" Opacity="0.57" IsHitTestVisible="False" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding PlaceholderText}" TextWrapping="{TemplateBinding TextWrapping}" TextAlignment="{TemplateBinding TextAlignment}"/>
                        <Button x:Name="DeleteButton" AutomationProperties.AccessibilityView="Raw" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="2" FontSize="{TemplateBinding FontSize}" IsTabStop="False" MinWidth="34" Margin="{ThemeResource HelperButtonThemePadding}" Grid.Row="1" Style="{ThemeResource DeleteButtonStyle}" VerticalAlignment="Stretch" Visibility="Collapsed"/>
                        <ContentPresenter x:Name="DescriptionPresenter" AutomationProperties.AccessibilityView="Raw"  Content="{TemplateBinding Description}" Grid.ColumnSpan="2" Grid.Column="0" Foreground="{ThemeResource SystemControlDescriptionTextForegroundBrush}" Grid.Row="2" x:Load="False"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="VoiceMemberListTemplate" x:DataType="entities:DiscordMember">
        <Grid Margin="0,4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <lib:PersonPicture Margin="0,0,8,0" Width="16" Height="16" DisplayName="{Binding DisplayName}">
                <lib:PersonPicture.ProfilePicture>
                    <BitmapImage UriSource="{Binding NonAnimatedAvatarUrl}" DecodePixelWidth="16" DecodePixelHeight="16" DecodePixelType="Logical" />
                </lib:PersonPicture.ProfilePicture>
            </lib:PersonPicture>
            <TextBlock Grid.Column="1" Style="{ThemeResource CaptionTextBlockStyle}" Text="{Binding DisplayName}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ChannelListTemplate" x:DataType="channelVMs:ChannelListViewModel">
        <channels:ChannelListControl Channel="{Binding}" />
    </DataTemplate>

    <DataTemplate x:Key="ChannelListThreadTemplate" x:DataType="channelVMs:ChannelListViewModel">
        <channels:ChannelListControl Channel="{Binding}" Style="{StaticResource ThreadChannelListStyle}" />
    </DataTemplate>

    <DataTemplate x:Key="DMChannelListTemplate" x:DataType="channelVMs:ChannelListViewModel">
        <channels:ChannelListControl Channel="{Binding}" Style="{StaticResource DirectMessageChannelListStyle}"/>
    </DataTemplate>

    <DataTemplate x:Key="GroupChannelListTemplate" x:DataType="channelVMs:ChannelListViewModel">
        <channels:ChannelListControl Channel="{Binding}" Style="{StaticResource GroupChannelListStyle}"/>
    </DataTemplate>

    <DataTemplate x:Key="ChannelListCategoryTemplate" x:DataType="channelVMs:ChannelListViewModel">
        <Border ContextFlyout="{StaticResource ChannelContextFlyout}"
                VerticalAlignment="Stretch" 
                Background="Transparent" 
                Margin="10,8,8,2"
                Opacity="{x:Bind MutedOpacity}">
            <TextBlock FontSize="12"
                       Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                       FontWeight="SemiBold"
                       Text="{x:Bind Name, Converter={StaticResource TitleCaseConverter}}" 
                       TextWrapping="NoWrap" />
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="ChannelListVoiceTemplate" x:DataType="channelVMs:ChannelListViewModel">
        <channels:ChannelListControl Channel="{Binding}"/>
    </DataTemplate>

    <DataTemplate x:Key="RoleTemplate" x:DataType="userVMs:RoleViewModel">
        <Border BorderThickness="1"
                BorderBrush="{x:Bind Color}" 
                Padding="4,4,4,4"
                CornerRadius="2"
                MinWidth="24">
            <TextBlock Foreground="{x:Bind Color}" 
                       FontSize="12" Text="{x:Bind Name}" VerticalAlignment="Center" TextAlignment="Center"/>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="TypingUserTemplate" x:DataType="userVMs:UserViewModel">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Ellipse Width="16" Height="16" Margin="0,0,8,0">
                <Ellipse.Fill>
                    <ImageBrush>
                        <ImageBrush.ImageSource>
                            <BitmapImage UriSource="{x:Bind AvatarUrl}" DecodePixelWidth="16" DecodePixelHeight="16"/>
                        </ImageBrush.ImageSource>
                    </ImageBrush>
                </Ellipse.Fill>
            </Ellipse>
            <TextBlock Grid.Column="1" Text="{x:Bind DisplayName}" FontSize="12" Foreground="{Binding Color, Converter={StaticResource ColourBrushConverter}, FallbackValue={ThemeResource DefaultTextForegroundThemeBrush}}" Margin="0,0,4,0"/>
        </Grid>
    </DataTemplate>


    <DataTemplate x:Key="GuildsListTemplate" x:DataType="guildVMs:GuildListViewModel">
        <!--<lib:TreeViewItem IsSelected="{x:Bind IsSelected}" >-->
        <Grid Background="Transparent"
              ContextFlyout="{StaticResource GuildContextFlyout}"
              ToolTipService.ToolTip="{x:Bind Name}"
              ToolTipService.Placement="Left"
              Loaded="OnGuildsListItemLoaded">
            <lib:PersonPicture x:Phase="1" Margin="0,4" Width="42" Height="42" DisplayName="{x:Bind Name}" ProfilePicture="{Binding IconUrl}"/>
            <lib:InfoBadge x:Phase="2" VerticalAlignment="Top"
                           HorizontalAlignment="Right"
                           Margin="8,4"
                           MinWidth="8"
                           MinHeight="8"
                           Value="{x:Bind MentionCount}"
                           Visibility="{Binding Unread, Converter={StaticResource BoolVisibilityConverter}}"/>
        </Grid>
        <!--</lib:TreeViewItem>-->
    </DataTemplate>

    <DataTemplate x:Key="GuildsListFolderTemplate" x:DataType="guildVMs:GuildListFolderViewModel">
        <!--<lib:TreeViewItem ItemsSource="{x:Bind Children}" 
                          IsExpanded="{Binding IsExpanded}" >-->
        <Grid ToolTipService.ToolTip="{x:Bind Name}"
              ToolTipService.Placement="Left"
              Loaded="OnGuildsListFolderItemLoaded">
            <Ellipse Margin="0,4" 
                         Width="42" 
                         Height="42"
                         Opacity="0.3"
                         Fill="{Binding Color, Converter={StaticResource ColourBrushConverter}}"/>

            <FontIcon x:Name="ExpandedGlyph" 
                            FontFamily="{StaticResource SymbolThemeFontFamily}" 
                            Glyph="&#xE70D;" 
                            RenderTransformOrigin="0.5,0.5"
                            Opacity="0">
                <FontIcon.RenderTransform>
                    <RotateTransform x:Name="ExpandedGlyphTransform" />
                </FontIcon.RenderTransform>
            </FontIcon>

            <Grid Margin="0,4" Width="36" Height="36">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <Ellipse x:Name="Ellipse1" Grid.Column="0" Grid.Row="0" Margin="1">
                    <Ellipse.RenderTransform>
                        <TranslateTransform x:Name="EllipseTransform1" />
                    </Ellipse.RenderTransform>
                    <Ellipse.Fill>
                        <ImageBrush ImageSource="{Binding Icon1}"/>
                    </Ellipse.Fill>
                </Ellipse>
                <Ellipse x:Name="Ellipse2" Grid.Column="0" Grid.Row="1" Margin="1">
                    <Ellipse.RenderTransform>
                        <TranslateTransform x:Name="EllipseTransform2" />
                    </Ellipse.RenderTransform>
                    <Ellipse.Fill>
                        <ImageBrush ImageSource="{Binding Icon2}"/>
                    </Ellipse.Fill>
                </Ellipse>
                <Ellipse x:Name="Ellipse3" Grid.Column="1" Grid.Row="0" Margin="1">
                    <Ellipse.RenderTransform>
                        <TranslateTransform x:Name="EllipseTransform3" />
                    </Ellipse.RenderTransform>
                    <Ellipse.Fill>
                        <ImageBrush ImageSource="{Binding Icon3}"/>
                    </Ellipse.Fill>
                </Ellipse>
                <Ellipse x:Name="Ellipse4" Grid.Column="1" Grid.Row="1" Margin="1">
                    <Ellipse.RenderTransform>
                        <TranslateTransform x:Name="EllipseTransform4" />
                    </Ellipse.RenderTransform>
                    <Ellipse.Fill>
                        <ImageBrush ImageSource="{Binding Icon4}"/>
                    </Ellipse.Fill>
                </Ellipse>
            </Grid>

            <lib:InfoBadge x:Name="UnreadIndicator"
                           x:Load="{x:Bind Unread}" 
                           x:Phase="2"
                           Grid.ColumnSpan="2"
                           Grid.RowSpan="2"
                           VerticalAlignment="Top"
                           HorizontalAlignment="Right"
                           Margin="8,4"
                           MinWidth="8"
                           MinHeight="8"
                           Value="{x:Bind MentionCount}"/>

            <i:Interaction.Behaviors>
                <core:DataTriggerBehavior Binding="{x:Bind IsExpanded}"
                                              ComparisonCondition="Equal"
                                              Value="True">
                    <media1:ControlStoryboardAction>
                        <media1:ControlStoryboardAction.Storyboard>
                            <Storyboard>
                                <DoubleAnimation From="0" To="1" Storyboard.TargetName="ExpandedGlyph" Storyboard.TargetProperty="Opacity" Duration="0:0:0.25"/>
                                <DoubleAnimation From="359" To="0" Storyboard.TargetName="ExpandedGlyphTransform" Storyboard.TargetProperty="Angle" Duration="0:0:0.5" EasingFunction="{StaticResource EaseEnter}"/>

                                <DoubleAnimation From="0" To="200" Storyboard.TargetName="EllipseTransform1" Storyboard.TargetProperty="Y" Duration="0:0:0.2" BeginTime="0:0:0.15" EasingFunction="{StaticResource EaseExit}"/>
                                <DoubleAnimation From="1" To="0" Storyboard.TargetName="Ellipse1" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" BeginTime="0:0:0.15"/>

                                <DoubleAnimation From="0" To="200" Storyboard.TargetName="EllipseTransform2" Storyboard.TargetProperty="Y" Duration="0:0:0.2"  BeginTime="0:0:0.1" EasingFunction="{StaticResource EaseExit}"/>
                                <DoubleAnimation From="1" To="0" Storyboard.TargetName="Ellipse2" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" BeginTime="0:0:0.1"/>

                                <DoubleAnimation From="0" To="200" Storyboard.TargetName="EllipseTransform3" Storyboard.TargetProperty="Y" Duration="0:0:0.2" BeginTime="0:0:0.05" EasingFunction="{StaticResource EaseExit}"/>
                                <DoubleAnimation From="1" To="0" Storyboard.TargetName="Ellipse3" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" BeginTime="0:0:0.05"/>

                                <DoubleAnimation From="0" To="200" Storyboard.TargetName="EllipseTransform4" Storyboard.TargetProperty="Y" Duration="0:0:0.2" EasingFunction="{StaticResource EaseExit}"/>
                                <DoubleAnimation From="1" To="0" Storyboard.TargetName="Ellipse4" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2"/>
                            </Storyboard>
                        </media1:ControlStoryboardAction.Storyboard>
                    </media1:ControlStoryboardAction>
                </core:DataTriggerBehavior>
                <core:DataTriggerBehavior Binding="{x:Bind IsExpanded}"
                                              ComparisonCondition="Equal"
                                              Value="False">
                    <media1:ControlStoryboardAction>
                        <media1:ControlStoryboardAction.Storyboard>
                            <Storyboard>
                                <DoubleAnimation From="1" To="0" Storyboard.TargetName="ExpandedGlyph" Storyboard.TargetProperty="Opacity" Duration="0:0:0.25"/>
                                <DoubleAnimation From="0" To="270" Storyboard.TargetName="ExpandedGlyphTransform" Storyboard.TargetProperty="Angle" Duration="0:0:0.25" EasingFunction="{StaticResource EaseExit}"/>

                                <DoubleAnimation From="200" To="0" Storyboard.TargetName="EllipseTransform4" Storyboard.TargetProperty="Y" Duration="0:0:0.2" BeginTime="0:0:0.15" EasingFunction="{StaticResource EaseEnter}"/>
                                <DoubleAnimation From="0" To="1" Storyboard.TargetName="Ellipse4" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" BeginTime="0:0:0.15"/>

                                <DoubleAnimation From="200" To="0" Storyboard.TargetName="EllipseTransform3" Storyboard.TargetProperty="Y" Duration="0:0:0.2"  BeginTime="0:0:0.1" EasingFunction="{StaticResource EaseEnter}"/>
                                <DoubleAnimation From="0" To="1" Storyboard.TargetName="Ellipse3" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" BeginTime="0:0:0.1"/>

                                <DoubleAnimation From="200" To="0" Storyboard.TargetName="EllipseTransform2" Storyboard.TargetProperty="Y" Duration="0:0:0.2" BeginTime="0:0:0.05" EasingFunction="{StaticResource EaseEnter}"/>
                                <DoubleAnimation From="0" To="1" Storyboard.TargetName="Ellipse2" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" BeginTime="0:0:0.05"/>

                                <DoubleAnimation From="200" To="0" Storyboard.TargetName="EllipseTransform1" Storyboard.TargetProperty="Y" Duration="0:0:0.2" EasingFunction="{StaticResource EaseEnter}"/>
                                <DoubleAnimation From="0" To="1" Storyboard.TargetName="Ellipse1" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2"/>
                            </Storyboard>
                        </media1:ControlStoryboardAction.Storyboard>
                    </media1:ControlStoryboardAction>
                </core:DataTriggerBehavior>
            </i:Interaction.Behaviors>
        </Grid>
        <!--</lib:TreeViewItem>-->
    </DataTemplate>

    <DataTemplate x:Key="DMChannelTemplate" x:DataType="channelVMs:DmChannelListViewModel">
        <Grid Margin="0,0,4,0" Opacity="{x:Bind MutedOpacity}" ContextFlyout="{StaticResource DirectMessageContextFlyout}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="16" Width="Auto"/>
            </Grid.ColumnDefinitions>

            <users:AvatarControl Margin="2,0,0,0"
                                 Style="{ThemeResource SmallAvatarWithPresenceStyle}" 
                                 Width="32" 
                                 Height="32"
                                 Source="{x:Bind IconUrl}" 
                                 Presence="{x:Bind Recipient.Presence}" />

            <StackPanel Grid.Column="1" VerticalAlignment="Center" Margin="8,0,0,0">
                <TextBlock Text="{x:Bind Name}"/>
                <presence:InlinePresenceControl Presence="{x:Bind Recipient.Presence, Mode=OneWay}" />
            </StackPanel>

            <lib:InfoBadge x:Name="unreadIndicator" 
                           x:Load="{x:Bind Unread, Mode=OneWay}" 
                           Grid.Column="2" 
                           HorizontalAlignment="Center" 
                           VerticalAlignment="Center"
                           MinWidth="8"
                           MinHeight="8"
                           Margin="0"
                           Value="{x:Bind ReadState.MentionCount, Mode=OneWay}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GroupChannelTemplate" x:DataType="channelVMs:DmChannelListViewModel">
        <Grid Padding="0,4" Opacity="{x:Bind MutedOpacity}" ContextFlyout="{StaticResource DirectMessageContextFlyout}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="16" Width="Auto"/>
            </Grid.ColumnDefinitions>

            <lib:PersonPicture Width="32" Height="32" DisplayName="{x:Bind Name}">
                <lib:PersonPicture.ProfilePicture>
                    <BitmapImage UriSource="{x:Bind IconUrl}" DecodePixelWidth="32" DecodePixelType="Logical" />
                </lib:PersonPicture.ProfilePicture>
            </lib:PersonPicture>

            <StackPanel Grid.Column="1" VerticalAlignment="Center" Margin="8,0,0,0">
                <TextBlock Text="{x:Bind Name}"/>
            </StackPanel>


            <lib:InfoBadge x:Name="unreadIndicator" 
                           x:Load="{x:Bind Unread}" 
                           Grid.Column="2" 
                           HorizontalAlignment="Center" 
                           VerticalAlignment="Center"
                           MinWidth="8"
                           MinHeight="8"
                           Margin="0"
                           Value="{x:Bind ReadState.MentionCount}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="UserListTemplate">
        <Grid ContextFlyout="{StaticResource UserListContextFlyout}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <users:AvatarControl Style="{StaticResource SmallAvatarWithPresenceStyle}"
                                 Width="38"
                                 Height="38"
                                 Source="{Binding AvatarUrl}"
                                 Presence="{Binding Presence}"/>
            <Grid
                Grid.Column="1"
                Margin="8,0"
                VerticalAlignment="Center">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <controls:UsernameControl User="{Binding}" />
                <presence:InlinePresenceControl Grid.Row="1" Presence="{Binding Presence}"/>
            </Grid>
        </Grid>
    </DataTemplate>

</ResourceDictionary>
