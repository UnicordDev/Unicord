<ResourceDictionary
    x:Class="Unicord.Universal.Resources.Controls.Messages"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Unicord.Universal.Controls.Messages"
    xmlns:controls="using:Unicord.Universal.Controls"
    xmlns:entities="using:DSharpPlus.Entities"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:flyouts="using:Unicord.Universal.Controls.Flyouts" 
    xmlns:emoji="using:Unicord.Universal.Controls.Emoji"
    xmlns:converters="using:Unicord.Universal.Converters"
    xmlns:media="using:Microsoft.Toolkit.Uwp.UI.Media" 
    xmlns:messages="using:Unicord.Universal.Models.Messages" 
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls" 
    xmlns:extensions="using:Unicord.Universal.Extensions"
    xmlns:w1809="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 7)" xmlns:components="using:Unicord.Universal.Models.Messages.Components"
    x:DefaultBindMode="OneWay">

    <converters:AttachmentTemplateSelector x:Key="AttachmentTemplateSelector"
                                           ImageTemplate="{StaticResource DefaultAttachmentImageTemplate}"
                                           VideoTemplate="{StaticResource AttachmentMediaContentTemplate}"
                                           AudioTemplate="{StaticResource AttachmentMediaContentTemplate}"
                                           GenericTemplate="{StaticResource DefaultAttachmentGenericTemplate}"/>

    <converters:EmbedTemplateSelector x:Key="EmbedTemplateSelector"
                                      ImageTemplate="{StaticResource ImageEmbedTemplate}"
                                      VideoTemplate="{StaticResource VideoEmbedTemplate}"
                                      RichTemplate="{StaticResource RichEmbedTemplate}"/>

    <converters:AttachmentTypeConverter x:Key="AttachmentTypeConverter"/>

    <media:BackdropBlurBrush x:Key="SpoilerBrush" Amount="64" />

    <Style TargetType="local:AttachmentControl">
        <Setter Property="Background" Value="{ThemeResource Attachment_Background}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource Attachment_BorderBrush}"/>
        <Setter Property="Margin" Value="0,4,0,0"/>
        <Setter Property="BorderThickness" Value="{ThemeResource Attachment_BorderThickness}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:AttachmentControl">
                    <Grid HorizontalAlignment="Left"
                          DataContext="{TemplateBinding ViewModel}">
                        <Grid Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              CornerRadius="{ThemeResource Attachment_CornerRadius}"
                              ContextRequested="Grid_ContextRequested">
                            <Grid.Tag>
                                <MenuFlyout>
                                    <MenuFlyoutItem Text="Download" Icon="Download" Command="{Binding DownloadCommand}"/>
                                    <MenuFlyoutItem Text="Share" Icon="Share" Command="{Binding ShareCommand}"/>
                                    <MenuFlyoutItem Text="Copy URL" Icon="Link" Command="{Binding CopyCommand}"/>
                                </MenuFlyout>
                            </Grid.Tag>

                            <ContentControl ContentTemplateSelector="{StaticResource AttachmentTemplateSelector}"
                                            Content="{TemplateBinding ViewModel}"
                                            HorizontalContentAlignment="Stretch"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Top"
                                            VerticalContentAlignment="Top"
                                            MaxWidth="480"
                                            MaxHeight="480"/>

                            <Border x:Name="PART_SpoilerOverlay"
                                    Visibility="{Binding IsSpoiler, Converter={StaticResource BoolVisibilityConverter}}"
                                    Background="{ThemeResource SpoilerBrush}">
                                <Button Content="Spoiler! Click to reveal!" HorizontalAlignment="Center" Command="{Binding RevealSpoilerCommand}"/>
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="AttachmentMediaContentTemplate" x:DataType="messages:AttachmentViewModel">
        <UserControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                     HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
            <Grid x:Name="Root" MaxHeight="480">
                
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid x:Name="AudioInfo" Margin="4,2,4,8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock x:Name="Icon" FontSize="32"
                         FontFamily="{ThemeResource SymbolThemeFontFamily}"
                         Text="&#xe8d6;"
                         VerticalAlignment="Center"
                         Margin="0,0,12,0"/>

                    <StackPanel Grid.Column="1">
                        <TextBlock Text="{Binding FileName}" Style="{ThemeResource BaseTextBlockStyle}" TextWrapping="NoWrap"/>
                        <TextBlock Text="{Binding FileSize}" Style="{ThemeResource CaptionTextBlockStyle}" TextWrapping="NoWrap"/>
                    </StackPanel>

                    <StackPanel Grid.Column="2" Orientation="Horizontal" Margin="4,0,0,0">
                        <Button x:Name="DownloadButton"
                              Style="{ThemeResource IconButtonStyle}"
                              Margin="4,0,0,0"
                              Command="{Binding DownloadCommand}">
                            <Grid DataContext="{Binding DownloadProgress}">
                                <muxc:ProgressRing Width="16" Height="16" 
                                                 Opacity="{Binding ProgressOpacity}"
                                                 IsIndeterminate="{Binding IsIndeterminate}"
                                                 Value="{Binding Progress}"
                                                 Maximum="1" />
                                <TextBlock Text="&#xe896;" 
                                         FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                         FontSize="16"
                                         Opacity="{Binding IconOpacity}"/>
                            </Grid>
                        </Button>

                        <Button x:Name="CopyLinkButton"
                              Style="{ThemeResource IconButtonStyle}"
                              Content="&#xe71b;"
                              Margin="4,0,0,0"
                              Command="{Binding CopyCommand}"/>

                        <Button x:Name="ShareButton"
                              Style="{ThemeResource IconButtonStyle}"
                              Margin="4,0,0,0"
                              Command="{Binding ShareCommand}">
                            <Grid DataContext="{Binding ShareProgress}">
                                <muxc:ProgressRing Width="16" Height="16" 
                                             Opacity="{Binding ProgressOpacity}"
                                             IsIndeterminate="{Binding IsIndeterminate}"
                                             Value="{Binding Progress}"
                                             Maximum="1" />
                                <TextBlock Text="&#xe72d;" 
                                     FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                     FontSize="16"
                                     Opacity="{Binding IconOpacity}"/>
                            </Grid>
                        </Button>
                    </StackPanel>
                </Grid>

                <Border x:Name="MediaPlayerBorder" Grid.Row="1">
                    <controls:ScaledContentControl x:Name="MediaPlayerContainer" TargetWidth="{x:Bind NaturalWidth}" TargetHeight="{x:Bind NaturalHeight}" ForceSize="True">
                        <MediaPlayerElement x:Name="MediaPlayer" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Source="{Binding Source}" PosterSource="{x:Bind PosterSource}" AreTransportControlsEnabled="True"/>
                    </controls:ScaledContentControl>
                </Border>

                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="MediaType">
                        <VisualState x:Name="Video">
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{Binding IsVideo, Mode=OneWay}"/>
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="Icon.Text" Value="&#xe714;"/>
                                <Setter Target="Root.Margin" Value="0"/>
                                <Setter Target="MediaPlayerContainer.MaxHeight" Value="430"/>
                                <Setter Target="AudioInfo.Visibility" Value="Visible"/>
                                <Setter Target="AudioInfo.Margin" Value="12,8,8,8"/>
                                <Setter Target="MediaPlayer.TransportControls">
                                    <Setter.Value>
                                        <controls:CustomMediaTransportControls />
                                    </Setter.Value>
                                </Setter>
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Audio">
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{Binding IsAudio, Mode=OneWay}"/>
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="Icon.Text" Value="&#xe8d6;"/>
                                <Setter Target="Root.Margin" Value="8"/>
                                <Setter Target="MediaPlayerContainer.MaxHeight" Value="{StaticResource MediaPlayer_AudioOnly_MaxHeight}"/>
                                <Setter Target="AudioInfo.Visibility" Value="Visible"/>
                                <Setter Target="AudioInfo.Margin" Value="4,2,0,4"/>
                                <Setter Target="MediaPlayer.TransportControls">
                                    <Setter.Value>
                                        <controls:CustomMediaTransportControls Style="{StaticResource AudioMediaTransportControlsStyle}" IsFullWindowButtonVisible="False"/>
                                    </Setter.Value>
                                </Setter>
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </UserControl>
    </DataTemplate>
    

    <Style x:Key="AttachmentAudioControlStyle" TargetType="local:AttachmentMediaControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:AttachmentMediaControl">
                    <Grid x:Name="Root" Margin="8">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid x:Name="AudioInfo" Margin="4,2,4,8">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock FontSize="32"
                                           FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                           Text="&#xe8d6;"
                                           VerticalAlignment="Center"
                                           Margin="0,0,8,0"/>

                            <StackPanel Grid.Column="1">
                                <TextBlock Text="{Binding FileName}" Style="{ThemeResource BaseTextBlockStyle}" TextWrapping="NoWrap"/>
                                <TextBlock Text="{Binding FileSize}" Style="{ThemeResource CaptionTextBlockStyle}" TextWrapping="NoWrap"/>
                            </StackPanel>

                            <StackPanel Grid.Column="2" Orientation="Horizontal" Margin="4,0,0,0">
                                <Button x:Name="DownloadButton"
                                                Style="{ThemeResource IconButtonStyle}"
                                                Margin="4,0,0,0"
                                                Command="{Binding DownloadCommand}">
                                    <Grid DataContext="{Binding DownloadProgress, Mode=OneWay}">
                                        <muxc:ProgressRing Width="16" Height="16" 
                                                                   Opacity="{Binding ProgressOpacity, Mode=OneWay}"
                                                                   IsIndeterminate="{Binding IsIndeterminate, Mode=OneWay}"
                                                                   Value="{Binding Progress, Mode=OneWay}"
                                                                   Maximum="1" />
                                        <TextBlock Text="&#xe896;" 
                                                           FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                                           FontSize="16"
                                                           Opacity="{Binding IconOpacity, Mode=OneWay}"/>
                                    </Grid>
                                </Button>

                                <Button x:Name="CopyLinkButton"
                                                Style="{ThemeResource IconButtonStyle}"
                                                Content="&#xe71b;"
                                                Margin="4,0,0,0"
                                                Command="{Binding CopyCommand}"/>

                                <Button x:Name="ShareButton"
                                                Style="{ThemeResource IconButtonStyle}"
                                                Margin="4,0,0,0"
                                                Command="{Binding ShareCommand}">
                                    <Grid DataContext="{Binding ShareProgress}">
                                        <muxc:ProgressRing Width="16" Height="16" 
                                                               Opacity="{Binding ProgressOpacity}"
                                                               IsIndeterminate="{Binding IsIndeterminate}"
                                                               Value="{Binding Progress}"
                                                               Maximum="1" />
                                        <TextBlock Text="&#xe72d;" 
                                                       FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                                       FontSize="16"
                                                       Opacity="{Binding IconOpacity}"/>
                                    </Grid>
                                </Button>
                            </StackPanel>
                        </Grid>

                        <Border x:Name="MediaPlayerBorder" Grid.Row="1">
                            <MediaPlayerElement x:Name="MediaPlayer" MaxHeight="52" Source="{Binding Source}" PosterSource="{Binding PosterSource}" AreTransportControlsEnabled="True">
                                <MediaPlayerElement.TransportControls>
                                    <controls:CustomMediaTransportControls Style="{StaticResource AudioMediaTransportControlsStyle}"/>
                                </MediaPlayerElement.TransportControls>
                            </MediaPlayerElement>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AttachmentVideoControlStyle" TargetType="local:AttachmentMediaControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:AttachmentMediaControl">
                    <Border x:Name="MediaPlayerBorder" Grid.Row="1">
                        <controls:ScaledContentControl x:Name="MediaPlayerContainer" ForceSize="True" TargetWidth="{Binding NaturalWidth}" TargetHeight="{Binding NaturalHeight}">
                            <MediaPlayerElement x:Name="MediaPlayer" MaxHeight="480" Source="{Binding Source}" PosterSource="{Binding PosterSource}" AreTransportControlsEnabled="True">
                                <MediaPlayerElement.TransportControls>
                                    <controls:CustomMediaTransportControls/>
                                </MediaPlayerElement.TransportControls>
                            </MediaPlayerElement>
                        </controls:ScaledContentControl>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="DefaultAttachmentImageTemplate">
        <controls:ScaledContentControl TargetWidth="{Binding NaturalWidth}" TargetHeight="{Binding NaturalHeight}">
            <controls:ImageElement ImageWidth="{Binding NaturalWidth}" ImageHeight="{Binding NaturalHeight}" ImageUri="{Binding Source}" />
        </controls:ScaledContentControl>
    </DataTemplate>

    <!--<DataTemplate x:Key="DefaultAttachmentMediaTemplate" x:DataType="messages:AttachmentViewModel">
        <local:AttachmentMediaControl ViewModel="{Binding}"/>
    </DataTemplate>

    <DataTemplate x:Key="VideoAttachmentMediaTemplate" x:DataType="messages:AttachmentViewModel">
        <local:AttachmentMediaControl ViewModel="{Binding}" Style="{StaticResource AttachmentVideoControlStyle}"/>
    </DataTemplate>
    <DataTemplate x:Key="AudioAttachmentMediaTemplate" x:DataType="messages:AttachmentViewModel">
        <local:AttachmentMediaControl ViewModel="{Binding}" Style="{StaticResource AttachmentAudioControlStyle}"/>
    </DataTemplate>-->

    <w1809:ScalarTransition x:Key="FadeTransition" Duration="00:00:00.2" />

    <DataTemplate x:Key="DefaultAttachmentGenericTemplate" x:DataType="messages:AttachmentViewModel">
        <Grid x:Name="AttachmentInfo" MaxWidth="360" Margin="8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <TextBlock FontSize="32"
                       FontFamily="{ThemeResource SymbolThemeFontFamily}"
                       Text="&#xe8a5;"
                       VerticalAlignment="Center"
                       Margin="0,0,8,0"/>

            <StackPanel Grid.Column="1">
                <TextBlock Text="{Binding FileName}" Style="{ThemeResource BaseTextBlockStyle}" TextWrapping="NoWrap"/>
                <TextBlock Text="{Binding FileSize}" Style="{ThemeResource CaptionTextBlockStyle}" TextWrapping="NoWrap"/>
            </StackPanel>

            <StackPanel Grid.Column="2" Orientation="Horizontal" Margin="4,0,0,0">
                <Button x:Name="DownloadButton"
                        Style="{ThemeResource IconButtonStyle}"
                        Margin="4,0,0,0"
                        Command="{Binding DownloadCommand}">
                    <Grid DataContext="{Binding DownloadProgress}">
                        <muxc:ProgressRing Width="16" Height="16" 
                                           Opacity="{Binding ProgressOpacity}"
                                           IsIndeterminate="{Binding IsIndeterminate}"
                                           Value="{Binding Progress}"
                                           Maximum="1" />
                        <TextBlock Text="&#xe896;" 
                                   FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                   FontSize="16"
                                   Opacity="{Binding IconOpacity}"/>
                    </Grid>
                </Button>

                <Button x:Name="CopyLinkButton"
                        Style="{ThemeResource IconButtonStyle}"
                        Content="&#xe71b;"
                        Margin="4,0,0,0"
                        Command="{Binding CopyCommand}"/>

                <Button x:Name="ShareButton"
                        Style="{ThemeResource IconButtonStyle}"
                        Margin="4,0,0,0"
                        Command="{Binding ShareCommand}">
                    <Grid DataContext="{Binding ShareProgress}">
                        <muxc:ProgressRing Width="16" Height="16" 
                                           Opacity="{Binding ProgressOpacity}"
                                           IsIndeterminate="{Binding IsIndeterminate}"
                                           Value="{Binding Progress}"
                                           Maximum="1" />
                        <TextBlock Text="&#xe72d;" 
                                   FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                   FontSize="16"
                                   Opacity="{Binding IconOpacity}"/>
                    </Grid>
                </Button>
            </StackPanel>
        </Grid>
    </DataTemplate>


    <!--<DataTemplate x:Key="DefaultAttachmentAudioTemplate">
        <Grid Padding="4">
            <MediaPlayerElement Source="{Binding Source}" AreTransportControlsEnabled="True">
                <MediaPlayerElement.TransportControls>
                    <MediaTransportControls Style="{ThemeResource MediaTransportControlsStyle}"/>
                </MediaPlayerElement.TransportControls>
            </MediaPlayerElement>
        </Grid>
    </DataTemplate>-->

    <DataTemplate x:Key="DefaultReactionTemplate">
        <ToggleButton x:Name="ReactionToggleButton" 
                      ToolTipService.ToolTip="{Binding Emoji.Name}" 
                      IsChecked="{Binding IsMe, Mode=OneWay}"
                      Padding="1"
                      BorderThickness="1"
                      Command="{Binding ReactCommand}"
                      CommandParameter="{Binding Emoji}">
            <ToggleButton.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.ThemeDictionaries>
                        <ResourceDictionary x:Key="Default">
                            <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="{ThemeResource SystemAccentColorLight2}" Opacity="0.6" />
                            <SolidColorBrush x:Key="ToggleButtonBorderBrushChecked" Color="{ThemeResource SystemAccentColorLight2}" Opacity="0.8" />

                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="{ThemeResource SystemAccentColorLight2}" Opacity="0.8" />

                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="{ThemeResource SystemAccentColorLight2}" />
                            <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedPressed" Color="{ThemeResource SystemAccentColorLight2}" />
                        </ResourceDictionary>

                        <ResourceDictionary x:Key="Light">
                            <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="{ThemeResource SystemAccentColorDark1}" Opacity="0.6" />
                            <SolidColorBrush x:Key="ToggleButtonBorderBrushChecked" Color="{ThemeResource SystemAccentColorDark1}" Opacity="0.6" />

                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="{ThemeResource SystemAccentColorDark1}" Opacity="0.8" />

                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="{ThemeResource SystemAccentColorDark1}" />
                            <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedPressed" Color="{ThemeResource SystemAccentColorDark1}" />
                        </ResourceDictionary>
                    </ResourceDictionary.ThemeDictionaries>
                </ResourceDictionary>
            </ToggleButton.Resources>

            <Grid Margin="2,0,4,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="18" Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <emoji:EmojiControl Emoji="{Binding Emoji}" Size="18" />
                <TextBlock Grid.Column="1" Margin="8,0,0,0" Text="{Binding Count}" FontSize="12" VerticalAlignment="Center"/>
            </Grid>
        </ToggleButton>
    </DataTemplate>

    <DataTemplate x:Key="RichEmbedTemplate" x:DataType="messages:EmbedViewModel">
        <Border BorderBrush="{ThemeResource RichEmbed_BorderBrush}"
                Background="{ThemeResource RichEmbed_Background}"
                BorderThickness="{ThemeResource RichEmbed_BorderThickness}"
                CornerRadius="{ThemeResource RichEmbed_CornerRadius}"
                MaxWidth="480"
                Margin="0,4,0,0">
            <Grid>
                <Border Background="{x:Bind Color}" 
                        CornerRadius="{ThemeResource RichEmbed_Inner_CornerRadius}">
                    <Border.Clip>
                        <RectangleGeometry Rect="0,0,4,1000" />
                    </Border.Clip>
                </Border>
                <Grid Padding="{ThemeResource RichEmbed_InnerPadding}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <StackPanel>
                            <Grid x:Name="ProviderGrid"
                                  x:Load="{x:Bind HasProvider}"
                                  x:Phase="2"
                                  Margin="0,0,0,4">
                                <TextBlock VerticalAlignment="Center" FontSize="12">
                                    <Hyperlink NavigateUri="{x:Bind ProviderUrl, Mode=OneWay}" UnderlineStyle="None">
                                        <Run Text="{x:Bind ProviderName, Mode=OneWay}"/>
                                    </Hyperlink>
                                </TextBlock>
                            </Grid>

                            <Grid x:Name="AuthorGrid"
                                  x:Load="{x:Bind HasAuthor}"
                                  x:Phase="1"
                                  Margin="0,0,0,4">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Ellipse x:Name="AuthorIcon" 
                                         x:Load="{x:Bind Author.HasIconUrl}"
                                         Width="20"
                                         Height="20"
                                         Margin="0,0,8,0">
                                    <Ellipse.Fill>
                                        <ImageBrush>
                                            <ImageBrush.ImageSource>
                                                <BitmapImage DecodePixelHeight="20"
                                                             DecodePixelWidth="20"
                                                             DecodePixelType="Logical"
                                                             UriSource="{x:Bind Author.IconUrl}" />
                                            </ImageBrush.ImageSource>
                                        </ImageBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <TextBlock Grid.Column="1" VerticalAlignment="Center" FontWeight="Bold" Text="{x:Bind Author.Name}"/>
                            </Grid>

                            <controls:MarkdownTextBlock x:Name="TitleText"
                                                        x:Load="{x:Bind HasTitle}"
                                                        x:Phase="0"
                                                        Channel="{x:Bind Channel}"
                                                        FontWeight="Bold"
                                                        TextWrapping="WrapWholeWords"
                                                        InlineOnly="True"
                                                        Text="{x:Bind Title}" />

                            <controls:MarkdownTextBlock x:Name="DescriptionText"
                                                        x:Load="{x:Bind HasDescription}"
                                                        x:Phase="0"
                                                        Channel="{x:Bind Channel}"
                                                        Margin="0,4,0,0"
                                                        TextWrapping="WrapWholeWords"
                                                        InlineOnly="False"
                                                        Text="{x:Bind Description}"/>
                        </StackPanel>

                        <local:EmbedFieldsView x:Name="FieldsList"
                                               x:Load="{x:Bind HasFields}"
                                               x:Phase="3"
                                               Grid.Row="1"
                                               ItemsSource="{x:Bind Fields}"
                                               HorizontalAlignment="Stretch"
                                               HorizontalContentAlignment="Stretch">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <controls:UniformGrid Columns="3" HorizontalAlignment="Stretch"  />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate x:DataType="messages:EmbedFieldViewModel">
                                    <StackPanel Margin="0,0,4,2">
                                        <controls:MarkdownTextBlock x:Name="EmbedFieldTitle" Channel="{x:Bind Channel}" Text="{x:Bind Title}" FontWeight="Bold"/>
                                        <controls:MarkdownTextBlock x:Name="EmbedFieldContent" Channel="{x:Bind Channel}" Grid.Row="1" Text="{x:Bind Text}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </local:EmbedFieldsView>

                        <local:ImageEmbedControl x:Name="PART_LargeThumbnail"
                                                 x:Load="{x:Bind HasLargeThumbnail, Mode=OneWay}"
                                                 x:Phase="1"
                                                 Grid.Row="2"
                                                 Margin="0,8,0,0"
                                                 ViewModel="{x:Bind Thumbnail, Mode=OneWay}"/>
                        
                        <local:VideoEmbedControl x:Name="EmbedVideo"
                                                 x:Load="{x:Bind HasVideo, Mode=OneWay}"
                                                 x:Phase="1"
                                                 Grid.Row="2"
                                                 Margin="0,8,0,0"
                                                 ViewModel="{x:Bind Video, Mode=OneWay}"/>

                        <Grid x:Name="FooterGrid"
                              x:Load="{x:Bind HasFooter}"
                              x:Phase="4"
                              Grid.Row="3"
                              Margin="0,4,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Rectangle x:Name="FooterIcon"
                                       x:Load="{x:Bind Footer.HasIconUrl}"
                                       Width="20" Height="20"
                                       RadiusX="2" RadiusY="2"
                                       Margin="0,0,12,0">
                                <Rectangle.Fill>
                                    <ImageBrush>
                                        <ImageBrush.ImageSource>
                                            <BitmapImage DecodePixelHeight="20"
                                                      DecodePixelWidth="20"
                                                      UriSource="{x:Bind Footer.IconUrl}" />
                                        </ImageBrush.ImageSource>
                                    </ImageBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <TextBlock Grid.Column="1" FontSize="12pt" TextWrapping="Wrap" VerticalAlignment="Center" Text="{x:Bind Footer.Text}"/>
                        </Grid>
                    </Grid>

                    <Grid Grid.Column="1">
                        <local:ImageEmbedControl x:Name="PART_Thumbnail"
                                                 x:Load="{x:Bind HasSmallThumbnail, Mode=OneWay}"
                                                 x:Phase="1"
                                                 Width="96"
                                                 MaxHeight="96"
                                                 Margin="12,0,0,0"
                                                 VerticalAlignment="Top"
                                                 ViewModel="{x:Bind Thumbnail, Mode=OneWay}" />
                    </Grid>
                </Grid>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="ImageEmbedTemplate" x:DataType="messages:EmbedViewModel">
        <local:ImageEmbedControl ViewModel="{Binding Thumbnail}"/>
    </DataTemplate>

    <DataTemplate x:Key="VideoEmbedTemplate" x:DataType="messages:EmbedViewModel">
        <local:VideoEmbedControl ViewModel="{Binding Video}"/>
    </DataTemplate>

    <DataTemplate x:Key="DefaultAttachmentTemplate" x:DataType="messages:EmbedViewModel">
        <local:AttachmentControl ViewModel="{Binding}" />
    </DataTemplate>

    <DataTemplate x:Key="DefaultStickerTemplate">
        <local:StickerControl Sticker="{Binding}" />
    </DataTemplate>

    <converters:ComponentTemplateSelector x:Key="ComponentTemplateSelector"
                                          ActionRowTemplate="{StaticResource ActionRowComponentTemplate}"
                                          PrimaryButtonTemplate="{StaticResource PrimaryButtonComponentTemplate}"
                                          SecondaryButtonTemplate="{StaticResource SecondaryButtonComponentTemplate}"
                                          SuccessButtonTemplate="{StaticResource SuccessButtonComponentTemplate}"
                                          DangerButtonTemplate="{StaticResource DangerButtonComponentTemplate}"
                                          LinkButtonTemplate="{StaticResource LinkButtonComponentTemplate}"
                                          UnknownTemplate="{StaticResource FallbackComponentTemplate}"/>

    <DataTemplate x:Key="ActionRowComponentTemplate">
        <ItemsControl ItemTemplateSelector="{StaticResource ComponentTemplateSelector}" 
                      ItemsSource="{Binding Components}" Margin="0,4,0,0">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <toolkit:WrapPanel Orientation="Horizontal" HorizontalSpacing="4" VerticalSpacing="4" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </DataTemplate>

    <DataTemplate x:Key="ButtonComponentContentTemplate"
                  x:DataType="components:ButtonComponentViewModel">
        <StackPanel Orientation="Horizontal">
            <emoji:EmojiControl x:Name="PART_ButtonEmoji" x:Load="{x:Bind Emoji.IsValid}" Emoji="{x:Bind Emoji}" Size="20" />

            <TextBlock x:Name="PART_ButtonLabel" x:Load="{x:Bind HasLabel}" VerticalAlignment="Center" Text="{x:Bind Label}" Padding="12,0"/>

            <TextBlock x:Name="PART_ButtonExternalLink"
                       x:Load="{x:Bind ShowExternalLinkIcon}"
                       FontFamily="{ThemeResource SymbolThemeFontFamily}"
                       FontSize="16" 
                       VerticalAlignment="Center">&#xE8A7;</TextBlock>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="PrimaryButtonComponentTemplate"
                  x:DataType="components:ButtonComponentViewModel">
        <Button MinWidth="68" BorderThickness="0" Padding="12,8" 
                Style="{ThemeResource AccentButtonStyle}"
                Command="{x:Bind Execute}"
                Content="{x:Bind}"
                ContentTemplate="{StaticResource ButtonComponentContentTemplate}"/>
    </DataTemplate>

    <DataTemplate x:Key="SecondaryButtonComponentTemplate"
                  x:DataType="components:ButtonComponentViewModel">
        <Button MinWidth="68" BorderThickness="0" Padding="12,8" 
                Command="{x:Bind Execute}"
                Content="{x:Bind}"
                ContentTemplate="{StaticResource ButtonComponentContentTemplate}"/>
    </DataTemplate>

    <DataTemplate x:Key="SuccessButtonComponentTemplate"
                  x:DataType="components:ButtonComponentViewModel">
        <Button MinWidth="68" BorderThickness="0" Padding="12,8" 
                Command="{x:Bind Execute}"
                Content="{x:Bind}"
                ContentTemplate="{StaticResource ButtonComponentContentTemplate}">
            <Button.Resources>
                <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="Black"/>
                <SolidColorBrush x:Key="ButtonForegroundPressed" Color="White"/>

                <SolidColorBrush x:Key="ButtonBackground" Color="{ThemeResource SuccessColour}"/>
                <SolidColorBrush x:Key="ButtonBorderBrush" Color="{ThemeResource SuccessColour}"/>

                <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="{ThemeResource SuccessLight1Colour}"/>
                <SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="{ThemeResource SuccessLight1Colour}"/>

                <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{ThemeResource SuccessDark1Colour}"/>
                <SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="{ThemeResource SuccessDark1Colour}"/>
            </Button.Resources>
        </Button>
    </DataTemplate>

    <DataTemplate x:Key="DangerButtonComponentTemplate"
                  x:DataType="components:ButtonComponentViewModel">
        <Button MinWidth="68" BorderThickness="0" Padding="12,8" 
                Command="{x:Bind Execute}"
                Content="{x:Bind}"
                ContentTemplate="{StaticResource ButtonComponentContentTemplate}">
            <Button.Resources>
                <SolidColorBrush x:Key="ButtonForeground" Color="{ThemeResource DangerForegroundColor}"/>
                <SolidColorBrush x:Key="ButtonForegroundPointerOver" Color="{ThemeResource DangerForegroundColor}"/>
                <SolidColorBrush x:Key="ButtonForegroundPressed" Color="{ThemeResource DangerForegroundColor}"/>

                <SolidColorBrush x:Key="ButtonBackground" Color="{ThemeResource DangerColour}"/>
                <SolidColorBrush x:Key="ButtonBorderBrush" Color="{ThemeResource DangerColour}"/>

                <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="{ThemeResource DangerLight1Colour}"/>
                <SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="{ThemeResource DangerLight1Colour}"/>

                <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{ThemeResource DangerDark1Colour}"/>
                <SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="{ThemeResource DangerDark1Colour}"/>
            </Button.Resources>
        </Button>
    </DataTemplate>

    <DataTemplate x:Key="LinkButtonComponentTemplate"
                  x:DataType="components:ButtonComponentViewModel">
        <Button MinWidth="68" BorderThickness="0" Padding="12,8"
                Command="{x:Bind Execute}"
                Content="{x:Bind}"
                ContentTemplate="{StaticResource ButtonComponentContentTemplate}"/>
    </DataTemplate>

    <DataTemplate x:Key="FallbackComponentTemplate">
        <TextBlock Foreground="{ThemeResource ErrorTextForegroundBrush}" Text="This component is broken! Yell at me!" />
    </DataTemplate>

    <Style TargetType="local:StickerControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:StickerControl">
                    <Border
                        x:Name="Root"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="MessageEditControlsTemplate" x:DataType="messages:MessageEditViewModel">
        <Grid x:Name="EditTools"
           Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
           BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
           BorderThickness="1"
           CornerRadius="4"
           Padding="4"
           Margin="0,4,0,0">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            
            <TextBox x:Name="MessageEditBox"
                  extensions:FocusExtensions.IsFocused="{x:Bind IsFocused}"
                  extensions:ShiftEnterExtensions.IsEnabled="True"
                  extensions:ShiftEnterExtensions.EnterCommand="{x:Bind CommitCommand}"
                  extensions:ShiftEnterExtensions.ShiftEnterCommand="{x:Bind InsertNewLineCommand}"
                  extensions:ShiftEnterExtensions.EscapeCommand="{x:Bind DiscardCommand}"
                  MaxHeight="100"
                  AcceptsReturn="False"
                  Style="{ThemeResource MessageTextBoxStyle}"
                  Text="{x:Bind Content, Mode=TwoWay}"
                  SelectionStart="{x:Bind SelectionStart, Mode=OneTime}"
                  TextWrapping="Wrap" />

            <Button x:Name="MessageEditFinishButton"
                 Grid.Column="1"
                 Content="&#xe8fb;"
                 Margin="4,0,0,0"
                 Style="{ThemeResource IconButtonStyle}"
                 Command="{x:Bind CommitCommand}"/>

            <Button x:Name="MessageEditCancelButton"       
                 Grid.Column="2"
                 Content="&#xe8bb;"                                            
                 Margin="4,0,0,0"
                 Style="{ThemeResource IconButtonStyle}"
                 Command="{x:Bind DiscardCommand}"/>
        </Grid>
    </DataTemplate>

    <Style TargetType="local:MessageEditTools">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:MessageEditTools">
                    <ContentPresenter Content="{TemplateBinding ViewModel}"
                                      ContentTemplate="{StaticResource MessageEditControlsTemplate}"
                                      HorizontalAlignment="Stretch"
                                      HorizontalContentAlignment="Stretch"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="MentionedMessageBackgroundBrush" Color="{ThemeResource SystemAccentColor}" Opacity="0.16666"/>

    <DataTemplate x:Key="MessageContentTemplate" x:DataType="messages:MessageViewModel">
        <UserControl HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                     VerticalAlignment="Stretch" VerticalContentAlignment="Stretch">
            <Grid x:Name="MessageControl_MainBorder"
                  ContextFlyout="{StaticResource MessageContextFlyout}"
                  Background="Transparent"
                  BorderBrush="Transparent"
                  BorderThickness="4,0,0,0">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="Mentions">
                        <VisualState x:Name="NoMention">
                            <VisualState.StateTriggers>
                                <StateTrigger x:Name="NoMentionStateTrigger" IsActive="{x:Bind converters:Static.Not(IsMention), Mode=OneWay}"/>
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="MessageControl_MainBorder.Background" Value="Transparent"/>
                                <Setter Target="MessageControl_MainBorder.BorderBrush" Value="Transparent"/>
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Mention">
                            <VisualState.StateTriggers>
                                <StateTrigger x:Name="MentionStateTrigger" IsActive="{x:Bind IsMention, Mode=OneWay}"/>
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="MessageControl_MainBorder.BorderBrush" Value="{ThemeResource SystemControlBackgroundAccentBrush}"/>
                                <Setter Target="MessageControl_MainBorder.Background" Value="{ThemeResource MentionedMessageBackgroundBrush}" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="Size">
                        <VisualState x:Name="DefaultState">
                            <VisualState.StateTriggers>
                                <StateTrigger x:Name="DefaultSizeTrigger" IsActive="{x:Bind converters:Static.Is(State, messages:MessageViewModelState.Default), Mode=OneWay}"/>
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="MessageControl_MainBorder.Padding" Value="8,8,16,0"/>
                                <Setter Target="MessageControl_MainBorder.Margin" Value="0,0,0,0"/>
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="NormalState">
                            <VisualState.StateTriggers>
                                <StateTrigger x:Name="NormalSizeTrigger" IsActive="{x:Bind converters:Static.Is(State, messages:MessageViewModelState.Normal), Mode=OneWay}"/>
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="MessageControl_MainBorder.Padding" Value="8,8,16,0"/>
                                <Setter Target="MessageControl_MainBorder.Margin" Value="0,12,0,0"/>
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="CollapsedState">
                            <VisualState.StateTriggers>
                                <StateTrigger x:Name="CollapsedSizeTrigger" IsActive="{x:Bind converters:Static.Is(State, messages:MessageViewModelState.Collapsed), Mode=OneWay}"/>
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="MessageControl_MainBorder.Padding" Value="8,2,16,0"/>
                                <Setter Target="MessageControl_MainBorder.Margin" Value="0,0,0,0"/>
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="EditingState">
                            <VisualState.StateTriggers>
                                <StateTrigger x:Name="EditingSizeTrigger" IsActive="{x:Bind converters:Static.Is(State, messages:MessageViewModelState.Editing), Mode=OneWay}"/>
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="MessageControl_MainBorder.Padding" Value="8,8,16,0"/>
                                <Setter Target="MessageControl_MainBorder.Margin" Value="0,12,0,0"/>
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>

                <Grid x:Name="RootGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>                    

                    <Grid x:Name="ReferencedMessageContainer"
                          x:Load="{x:Bind converters:Static.NotNull(ReferencedMessage)}"
                          x:Phase="5"
                          Margin="56,-8,0,4" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="&#xE97A;" Margin="0,0,4,0" VerticalAlignment="Center" FontFamily="{StaticResource SymbolThemeFontFamily}" Foreground="{ThemeResource SystemControlForegroundAccentBrush}"/>

                        <Ellipse x:Name="ReplyAvatarContainer"
                                        Width="16"
                                        Height="16"
                                        Margin="0,0,4,0"
                                        Grid.Column="1">
                            <Ellipse.Fill>
                                <ImageBrush>
                                    <ImageBrush.ImageSource>
                                        <BitmapImage DecodePixelWidth="16"
                                                     DecodePixelHeight="16"
                                                     DecodePixelType="Logical" 
                                                     UriSource="{x:Bind ReferencedMessage.Author.AvatarUrl}" />
                                    </ImageBrush.ImageSource>
                                </ImageBrush>
                            </Ellipse.Fill>
                        </Ellipse>

                        <controls:UsernameControl Grid.Column="2" FontWeight="Bold" User="{x:Bind ReferencedMessage.Author}" FontSize="12" IconSize="12"/>

                        <controls:MarkdownTextBlock x:Name="ReplyMarkdown"
                                                Grid.Column="3"
                                                FontSize="12"
                                                InlineOnly="True"
                                                Foreground="{ThemeResource ApplicationSecondaryForegroundThemeBrush}"
                                                Channel="{x:Bind Channel.Channel}"
                                                Text="{x:Bind ReferencedMessage.Content}" 
                                                IsTextSelectionEnabled="True"
                                                IsEnabled="False"
                                                VerticalAlignment="Center"
                                                Margin="6,0" />

                    </Grid>

                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="48"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Ellipse x:Name="ImageContainer"
                                 x:Load="{x:Bind converters:Static.IsNot(State, messages:MessageViewModelState.Collapsed),Mode=OneWay}"   
                                 DataContextChanged="ImageContainer_DataContextChanged"
                                 Width="36"
                                 Height="36"
                                 VerticalAlignment="Top">
                            <Ellipse.Fill>
                                <ImageBrush x:Name="ProfileImageBrush">
                                    <ImageBrush.ImageSource>
                                        <BitmapImage DecodePixelWidth="36"
                                                     DecodePixelHeight="36"
                                                     DecodePixelType="Logical" 
                                                     UriSource="{x:Bind Author.AvatarUrl}" />
                                    </ImageBrush.ImageSource>
                                </ImageBrush>
                            </Ellipse.Fill>
                        </Ellipse>

                        <Grid x:Name="MessageContent" Grid.Column="1" Margin="8,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <StackPanel x:Name="AuthorContainer" 
                                        x:Load="{x:Bind converters:Static.IsNot(State, messages:MessageViewModelState.Collapsed),Mode=OneWay}"   
                                        Orientation="Horizontal" Grid.Row="0">
                                <controls:UsernameControl FontWeight="Bold" User="{x:Bind Author}" FontSize="14" IconSize="14" />

                                <TextBlock Margin="8,1" 
                                           x:Phase="4"                               
                                           FontSize="11"
                                           VerticalAlignment="Bottom" 
                                           Text="{x:Bind Timestamp, Converter={StaticResource DateTimeConverter}, Mode=OneWay}" 
                                           Opacity="0.4"/>
                            </StackPanel>

                            <controls:MarkdownTextBlock x:Name="Markdown"
                                                        x:Load="{x:Bind converters:Static.IsNot(State, messages:MessageViewModelState.Editing),Mode=OneWay}"   
                                                        Grid.Row="1"
                                                        Channel="{x:Bind Channel.Channel}"
                                                        Text="{x:Bind Content}" 
                                                        AllowHugeEmoji="True"
                                                        IsTextSelectionEnabled="True" 
                                                        WrapCodeBlock="True" 
                                                        Margin="0,0,2,0" />

                            <ContentControl x:Name="MessageEditTools" 
                                             x:Load="{x:Bind converters:Static.Is(State, messages:MessageViewModelState.Editing),Mode=OneWay}"   
                                             Content="{x:Bind EditViewModel, Mode=OneWay}"
                                             ContentTemplate="{StaticResource MessageEditControlsTemplate}"
                                             HorizontalAlignment="Stretch"
                                             HorizontalContentAlignment="Stretch"
                                             Grid.Row="1"/>

                            <StackPanel x:Name="AdditionalContent" 
                                        Grid.Row="2">
                                <ItemsControl x:Name="EmbedsContainer"
                                              x:Phase="3"
                                              ItemTemplateSelector="{ThemeResource EmbedTemplateSelector}" 
                                              ItemsSource="{x:Bind Embeds}"
                                              HorizontalAlignment="Left"/>

                                <ItemsControl x:Name="AttachmentsContainer"
                                              x:Phase="3"
                                              ItemTemplate="{ThemeResource DefaultAttachmentTemplate}" 
                                              ItemsSource="{x:Bind Attachments}"
                                              HorizontalAlignment="Left"/>

                                <ItemsControl x:Name="StickersContainer"
                                              x:Phase="4"
                                              ItemTemplate="{ThemeResource DefaultStickerTemplate}" 
                                              ItemsSource="{x:Bind Stickers}"
                                              HorizontalAlignment="Left"/>

                                <ItemsControl x:Name="ComponentsContainer"
                                              x:Phase="4"
                                              ItemTemplateSelector="{StaticResource ComponentTemplateSelector}" 
                                              ItemsSource="{x:Bind Components}"
                                              HorizontalAlignment="Left"/>

                                <ItemsControl x:Name="ReactionsContainer"
                                              x:Phase="3"
                                              Margin="0,4,0,0"
                                              ItemTemplate="{ThemeResource DefaultReactionTemplate}" 
                                              ItemsSource="{x:Bind Reactions}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <toolkit:WrapPanel Orientation="Horizontal" HorizontalSpacing="4" VerticalSpacing="4"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </StackPanel>
                        </Grid>
                    </Grid>

                </Grid>
            </Grid>
        </UserControl>
    </DataTemplate>

    <Style TargetType="local:MessageControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:MessageControl">
                    <ContentControl ContentTemplate="{StaticResource MessageContentTemplate}"
                                    Content="{TemplateBinding MessageViewModel}" 
                                    Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:SystemMessageControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:SystemMessageControl">
                    <Grid Margin="0,12,8,0" DataContext="{TemplateBinding MessageViewModel}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Margin="24,0,22,0"
                            FontFamily="{StaticResource SymbolThemeFontFamily}"
                            FontSize="20"
                            Text="{Binding SystemMessageSymbol}"
                            Foreground="{ThemeResource SystemControlForegroundAccentBrush}"/>

                        <controls:MarkdownTextBlock Grid.Column="1" IsSystemMessage="True" Channel="{Binding Channel.Channel}" Text="{Binding SystemMessageText}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
