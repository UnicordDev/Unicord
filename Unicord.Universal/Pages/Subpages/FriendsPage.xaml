<Page
    x:Class="Unicord.Universal.Pages.Subpages.FriendsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Unicord.Universal.Pages.Subpages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"   
    xmlns:b="using:Unicord.Universal.Behaviours"
    xmlns:lib="using:Microsoft.UI.Xaml.Controls"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:commands="using:Unicord.Universal.Commands"
    xmlns:discord="using:DSharpPlus.Entities"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:models="using:Unicord.Universal.Models" 
    xmlns:presence="using:Unicord.Universal.Controls.Presence"
    xmlns:users="using:Unicord.Universal.Controls.Users"
    xmlns:relationships="using:Unicord.Universal.Models.Relationships"
    NavigationCacheMode="Required"
    mc:Ignorable="d" x:DefaultBindMode="OneWay">
    <Page.DataContext>
        <models:FriendsPageViewModel/>
    </Page.DataContext>

    <Page.Resources>        
        <Style x:Key="RelationshipItemContainerStyle" BasedOn="{StaticResource DefaultGridViewItemStyle}" TargetType="GridViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="0,0,8,8"/>
        </Style>

        <!-- is there a way to simplify this? -->
        <DataTemplate x:Key="FriendRelationshipTemplate" x:DataType="relationships:RelationshipViewModel">
            <Grid Padding="8"
                  HorizontalAlignment="Stretch" 
                  CornerRadius="{ThemeResource FriendsPage_RelationshipItem_CornerRadius}"
                  Background="{ThemeResource FriendsPage_RelationshipItem_Background}"
                  BorderBrush="{ThemeResource FriendsPage_RelationshipItem_BorderBrush}"
                  BorderThickness="1"
                  PointerCanceled="Grid_PointerCanceled" 
                  PointerEntered="Grid_PointerEntered"
                  PointerExited="Grid_PointerExited">
                <Grid.Resources>
                    <Storyboard x:Key="pointerEntered" Duration="00:00:00.20">
                        <DoubleAnimation Storyboard.TargetName="mainContent" Storyboard.TargetProperty="Opacity" Duration="00:00:00.20" To="0"/>
                        <DoubleAnimation Storyboard.TargetName="overlayContent" Storyboard.TargetProperty="Opacity" Duration="00:00:00.20" To="1"/>
                    </Storyboard>
                    <Storyboard x:Key="pointerLeft" Duration="00:00:00.20">
                        <DoubleAnimation Storyboard.TargetName="mainContent" Storyboard.TargetProperty="Opacity" Duration="00:00:00.20" To="1"/>
                        <DoubleAnimation Storyboard.TargetName="overlayContent" Storyboard.TargetProperty="Opacity" Duration="00:00:00.20" To="0"/>
                    </Storyboard>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <users:AvatarControl Width="64" Height="64" Margin="0,0,12,0" Style="{ThemeResource MediumAvatarWithPresenceStyle}" Source="{Binding User.AvatarUrl}" Presence="{Binding User.Presence}" />
                <Grid Grid.Column="1" HorizontalAlignment="Stretch">
                    <Grid x:Name="mainContent" VerticalAlignment="Center" Opacity="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Name="text" Text="{Binding User.DisplayName}" FontSize="16" FontWeight="SemiBold" />
                        <presence:InlinePresenceControl Presence="{Binding User.Presence}" TextWrapping="Wrap" Grid.Row="1" />
                    </Grid>
                    <StackPanel x:Name="overlayContent" DataContext="{Binding}" Orientation="Horizontal" Opacity="0" VerticalAlignment="Center" HorizontalAlignment="Right">
                        <Button Style="{ThemeResource IconButtonStyle}" Margin="4,0">
                            <SymbolIcon Symbol="VideoChat"/>
                        </Button>
                        <Button Style="{ThemeResource IconButtonStyle}" Margin="4,0">
                            <SymbolIcon Symbol="Phone"/>
                        </Button>
                        <Button Style="{ThemeResource IconButtonStyle}" Command="{Binding User.MessageCommand}" Margin="4,0">
                            <SymbolIcon Symbol="Message"/>
                        </Button>
                    </StackPanel>
                </Grid>
            </Grid>
        </DataTemplate>
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Margin="12,12,12,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Button x:Name="ShowSidebarButton"
                    Margin="8,0,8,0"
                    Click="ShowSidebarButton_Click" 
                    VerticalAlignment="Center"
                    Style="{ThemeResource IconButtonStyle}" 
                    Content="&#xE700;"/>

            <TextBlock x:Uid="/FriendsPage/FriendsHeader" 
                       FontFamily="XamlAutoFontFamily"
                       Style="{ThemeResource TitleLargeTextBlockStyle}"
                       Grid.Column="1"
                       Margin="12"
                       Grid.Row="2"/>
        </Grid>
        <Pivot Margin="12,-8,12,0" 
               IsHeaderItemsCarouselEnabled="False" 
               ManipulationMode="None" 
               SelectedIndex="1" 
               Grid.Row="3">
            <Pivot.Items>
                <PivotItem x:Uid="/FriendsPage/FriendsAllItem"
                           Padding="0,8,0,0">
                    <GridView x:Name="AllView"
                              ItemsSource="{Binding All}"
                              SelectionMode="None"
                              IsItemClickEnabled="True"
                              ItemClick="OnItemClick"
                              ItemTemplate="{StaticResource FriendRelationshipTemplate}"
                              ItemContainerStyle="{ThemeResource RelationshipItemContainerStyle}"/>
                </PivotItem>
                <PivotItem x:Uid="/FriendsPage/FriendsOnlineItem"
                           Padding="0,8,0,0">
                    <GridView x:Name="OnlineView"
                              ItemsSource="{Binding Online}"
                              SelectionMode="None"
                              IsItemClickEnabled="True"
                              ItemClick="OnItemClick"
                              ItemTemplate="{StaticResource FriendRelationshipTemplate}"
                              ItemContainerStyle="{ThemeResource RelationshipItemContainerStyle}"/>
                </PivotItem>
                <!-- 
                        these two groups should use different templates 
                        for accepting/declining requests and unblocking 
                    -->
                <PivotItem x:Uid="/FriendsPage/FriendsPendingItem"
                           Padding="0,8,0,0">
                    <GridView x:Name="PendingView"
                              ItemsSource="{Binding Pending}"
                              SelectionMode="None"
                              IsItemClickEnabled="True"
                              ItemClick="OnItemClick"
                              ItemTemplate="{StaticResource FriendRelationshipTemplate}"
                              ItemContainerStyle="{ThemeResource RelationshipItemContainerStyle}"/>
                </PivotItem>
                <PivotItem x:Uid="/FriendsPage/FriendsBlockedItem"
                           Padding="0,8,0,0">
                    <GridView x:Name="BlockedView"
                              ItemsSource="{Binding Blocked}"
                              SelectionMode="None"
                              IsItemClickEnabled="True"
                              ItemClick="OnItemClick"
                              ItemTemplate="{StaticResource FriendRelationshipTemplate}"
                              ItemContainerStyle="{ThemeResource RelationshipItemContainerStyle}"/>
                </PivotItem>
            </Pivot.Items>
        </Pivot>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="769" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="ShowSidebarButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="ShowSidebarButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
